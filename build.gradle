plugins {
	id 'org.springframework.boot' version '2.1.9.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'checkstyle'
}

group = 'org.getmarco'
version = '0.0.1'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
}

dependencies {
	implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.647')
	//implementation 'com.amazonaws:aws-java-sdk'
	//implementation 'com.amazonaws:aws-java-sdk-core'
	implementation 'com.amazonaws:aws-java-sdk-s3'
	implementation 'com.amazonaws:aws-java-sdk-textract'
	implementation 'com.amazonaws:aws-java-sdk-comprehendmedical'
	//implementation 'com.amazonaws:aws-java-sdk-lambda'
	implementation 'com.amazonaws:aws-lambda-java-core:1.2.0'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.5.2'
	testImplementation 'org.junit.platform:junit-platform-launcher:1.5.2'
	testImplementation 'org.junit.platform:junit-platform-engine:1.5.2'
	testImplementation 'org.junit.platform:junit-platform-commons:1.5.2'
	testImplementation 'io.rest-assured:rest-assured:4.1.2'
	testImplementation 'io.rest-assured:rest-assured-common:4.1.2'
	testImplementation 'io.rest-assured:json-path:4.1.2'
	testImplementation 'io.rest-assured:xml-path:4.1.2'
	implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.1'
	implementation group: 'org.apache.pdfbox', name: 'pdfbox-tools', version: '2.0.1'
	implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.10'
	implementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.10'
}

dependencyManagement {
	imports {
	}
}

checkstyle {
	toolVersion = "8.25"
	configDir = rootProject.file("src/checkstyle")
}

test {
	useJUnitPlatform()
}

task buildZip(type: Zip) {
	from compileJava
	from processResources
	into('lib') {
		from configurations.runtimeClasspath
	}
}

build.dependsOn buildZip